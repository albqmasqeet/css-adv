/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: "Lato", sans-serif;
    font-size: 16px;
    font-weight: 400;
    line-height: 1.7;
    /* 1.7 times bigger than default line-height */
    color: #777;
    padding: 30px;
}

.header {
    height: 95vh;
    background-image: linear-gradient(to right bottom,
        rgba(126, 213, 111, 0.8),
        rgba(40, 180, 133, 0.8)),
        url(../img/hero.jpg);
    background-size: cover;
    background-position: top;
    clip-path: polygon(0 0, 100% 0, 100% 75%, 0 100%);
    position: relative;
}

.logo-box {
    position: absolute;
    top: 40px;
    left: 40px;
}

.logo {
    height: 35px;
}

.text-box {
    position: absolute;
    /* centering text-box */
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    /* here 50% is width and height of the element */
    /* end */
    text-align: center;
}

.heading-primary {
    color: #fff;
    text-transform: uppercase;
    /* to remove shake from moveInLeft/Right */
    backface-visibility: hidden;
    margin-bottom: 60px;
}

.heading-primary-main {
    display: block;
    font-size: 60px;
    font-weight: 400;
    letter-spacing: 35px;
    /* animation-name  moveInLeft
    animation-duration 1s
     animation-timing-function ease-out */
    animation: moveInLeft 1s ease-out;

    /*other helpful animnation properties */
    /*
    animation-iteration-count: how many times does the animation repeat
    animation-delay: how long to wait before animation starts
    */
}

.heading-primary-sub {
    display: block;
    font-size: 20px;
    font-weight: 700;
    letter-spacing: 17.4px;
    animation: moveInRight 1s ease-out;
}

/* animation to move in from left to right */
@keyframes moveInLeft {

    /* when animation starts */
    0% {
        opacity: 0;
        transform: translateX(-100px);
    }

    80% {
        transform: translateX(10px);
    }

    /* when animation ends */
    100% {
        opacity: 1;
        transform: translate(0);

    }
}

/* animation to move in from right of screen to left of screen */
@keyframes moveInRight {

    /* when animation starts */
    0% {
        opacity: 0;
        transform: translateX(100px);
    }

    80% {
        transform: translateX(-10px);
    }

    /* when animation ends */
    100% {
        opacity: 1;
        transform: translate(0);

    }
}


/* animation to move in from bottom of screen to top of screen */
@keyframes moveInBottom {

    /* when animation starts */
    0% {
        opacity: 0;
        transform: translateY(30px);
    }

    /* when animation ends */
    100% {
        opacity: 1;
        transform: translate(0);

    }
}

.btn:link,
.btn:visited {
    text-decoration: none;
    text-transform: uppercase;
    padding: 15px 40px;
    display: inline-block;
    border-radius: 100px;
    transition: all 0.2s;
    position: relative;
}

.btn:hover {
    transform: translateY(-3px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
}

.btn:active {
    transform: translateY(-1px);
    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
}

.btn-white {
    background-color: #fff;
    color: #777;
}

.btn-white::after {
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 100px;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all 0.4s;
}

.btn-white::after {
    background-color: #fff;
}

.btn:hover::after {
    transform: scaleX(1.5) scaleY(1.4);
    opacity: 0;
}

.btn-animated {
    animation: moveInBottom 0.5s ease-out 0.75s;
    /** this cause styles at animation 0% applied in the 0.75s animation-delay so the button remains
    invisible during that time because of opacity 0 is applied in that 0% animation duration**/
    /* from mdn
    animation-fill-mode: backwards
    The animation will apply the values defined in the first relevant keyframe as 
    soon as it is applied to the target, and retain this during the animation-delay period
    */
    animation-fill-mode: backwards;
}